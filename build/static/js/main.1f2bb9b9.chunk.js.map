{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["Table","this","props","bookmarkData","removeBookmark","Component","TableHeader","TableBody","rows","map","row","index","href","link","target","rel","name","onClick","Form","handleChange","event","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","json","JSON","stringify","console","log","localStorage","setItem","onSubmit","for","type","id","onChange","App","bookmarks","filter","bookmark","i","removeItem","length","push","parse","getItem","key","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,E,4JACJ,WACE,MAAuCC,KAAKC,MAArCC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,eACrB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWD,aAAcA,EAAcC,eAAgBA,W,GAN3CC,aAYdC,EAAc,WAClB,OACE,gCACE,6BACE,+CAMFC,EAAY,SAACL,GACjB,IAAMM,EAAON,EAAMC,aAAaM,KAAI,SAACC,EAAKC,GACxC,OACE,+BACE,6BAAI,mBAAGC,KAAMF,EAAIG,KAAMC,OAAO,SAASC,IAAI,aAAvC,SAAqDL,EAAIM,SAC7D,6BACE,wBAAQC,QAAS,kBAAMf,EAAME,eAAeO,IAA5C,wBAHOA,MAQf,OACE,gCAAQH,KAIGR,I,OCsBAkB,E,kDA1DX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAUViB,aAAe,SAACC,GACZ,MAAwBA,EAAMN,OAAtBE,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKN,EAAQK,KAfE,EAmBnBE,aAAe,SAACH,GACZA,EAAMI,iBAEN,EAAKtB,MAAMuB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,cAGnB,IAAMC,EAAOC,KAAKC,UAAU,EAAKJ,OACjCK,QAAQC,IAAI,EAAKN,OACjBO,aAAaC,QAAQ,EAAKR,MAAMV,KAAMY,IAzBtC,EAAKD,aAAe,CAChBX,KAAM,GACNH,KAAM,IAGV,EAAKa,MAAQ,EAAKC,aARH,E,0CA+BnB,WACI,MAAuB1B,KAAKyB,MAApBV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,KAEd,OACI,uBAAMsB,SAAUlC,KAAKsB,aAArB,UACI,uBAAOa,IAAI,OAAX,kBACA,uBACIC,KAAK,OACLrB,KAAK,OACLsB,GAAG,OACHjB,MAAOL,EACPuB,SAAUtC,KAAKkB,eACnB,uBAAOiB,IAAI,OAAX,kBACA,uBACIC,KAAK,OACLrB,KAAK,OACLsB,GAAG,OACHjB,MAAOR,EACP0B,SAAUtC,KAAKkB,eACnB,wBAAQkB,KAAK,SAAb,2B,GApDGhC,aC0CJmC,E,4MAxCXd,MAAQ,CACNe,UAAW,I,EAEbrC,eAAiB,SAACO,GAChB,IAAO8B,EAAa,EAAKf,MAAlBe,UACP,EAAKnB,SAAS,CACVmB,UAAUA,EAAUC,QAAO,SAACC,EAASC,GAIjC,OAHGjC,IAAUiC,GACXX,aAAaY,WAAWF,EAAS3B,MAE5B4B,IAAMjC,Q,EAKvBc,aAAe,SAACkB,GACZ,EAAKrB,SAAS,CACZmB,UAAU,GAAD,mBAAM,EAAKf,MAAMe,WAAjB,CAA4BE,O,uDAI3C,WACE,IAAI,IAAIC,EAAI,EAAGA,EAAIX,aAAaa,OAAQF,IACtC3C,KAAKyB,MAAMe,UAAUM,KAAKlB,KAAKmB,MAAMf,aAAagB,QAAQhB,aAAaiB,IAAIN,MAE7E3C,KAAKqB,SAAS,CACVmB,UAAU,YAAKxC,KAAKyB,MAAMe,e,oBAGhC,WACE,OACE,sBAAKU,UAAU,YAAf,UACE,cAAC,EAAD,CAAOhD,aAAcF,KAAKyB,MAAMe,UAAWrC,eAAgBH,KAAKG,iBAChE,yCACA,cAAC,EAAD,CAAMqB,aAAcxB,KAAKwB,sB,GAnCjBpB,a,MCElB+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1f2bb9b9.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const {bookmarkData, removeBookmark} = this.props\r\n    return (\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody bookmarkData={bookmarkData} removeBookmark={removeBookmark}/>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Bookmark</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.bookmarkData.map((row, index) => {\r\n    return (\r\n      <tr key = {index}>\r\n        <td><a href={row.link} target=\"_blank\" rel=\"noreferrer\">{row.name}</a></td>\r\n        <td>\r\n          <button onClick={() => props.removeBookmark(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <tbody>{rows}</tbody>\r\n  )\r\n}\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.initialState = {\r\n            name: '',\r\n            link: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = (event) => { //allows user to add new data\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => { //updates form with new values\r\n        event.preventDefault();\r\n        \r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n\r\n        //save data to local storage\r\n        const json = JSON.stringify(this.state);\r\n        console.log(this.state);\r\n        localStorage.setItem(this.state.name, json);\r\n    }\r\n\r\n    render() {\r\n        const { name, link } = this.state; \r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <label for=\"name\">Name</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    id=\"name\"\r\n                    value={name} \r\n                    onChange={this.handleChange} />\r\n                <label for=\"link\">Link</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"link\" \r\n                    id=\"link\"\r\n                    value={link} \r\n                    onChange={this.handleChange} />\r\n                <button type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\nimport Table from './Table'\r\nimport Form from './Form'\r\nclass App extends Component {\r\n    state = {\r\n      bookmarks: []\r\n    }\r\n    removeBookmark = (index) => {\r\n      const {bookmarks} = this.state\r\n      this.setState({\r\n          bookmarks:bookmarks.filter((bookmark,i) => {\r\n              if(index === i) {\r\n                localStorage.removeItem(bookmark.name);\r\n              }\r\n              return i !== index\r\n          }),\r\n      });\r\n    }\r\n\r\n    handleSubmit = (bookmark) => {\r\n        this.setState({\r\n          bookmarks: [...this.state.bookmarks, bookmark]\r\n        })\r\n    }\r\n    //injects localstorage data to table\r\n    componentDidMount() {\r\n      for(var i = 0; i < localStorage.length; i++) {\r\n        this.state.bookmarks.push(JSON.parse(localStorage.getItem(localStorage.key(i))));\r\n      }\r\n      this.setState({\r\n          bookmarks: [...this.state.bookmarks]\r\n        })\r\n    } \r\n    render() {\r\n      return (\r\n        <div className=\"container\">\r\n          <Table bookmarkData={this.state.bookmarks} removeBookmark={this.removeBookmark} />\r\n          <h3>Add New</h3>\r\n          <Form handleSubmit={this.handleSubmit}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}